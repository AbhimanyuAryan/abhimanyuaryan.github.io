{"_path":"/multi-agents/2-genetic-algorithm","_dir":"multi-agents","_draft":false,"_partial":false,"_locale":"","title":"Genetic Algorithm","description":"","date":"2024-02-27","author":"Aryan","body":{"type":"root","children":[{"type":"element","tag":"h1","props":{"id":"genetic-algorithm-and-its-implementation-in-python"},"children":[{"type":"text","value":"Genetic Algorithm and it's implementation in Python"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The algorithm begins by creating random population"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Thea algorithm then creates a sequence of new populations. A each step, the algorithm uses the individuals in current generation to create the next population. To create a new population, the algorithm performs the following steps:\n"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Score each member of the current population by computing its fitness value. The values are called the raw fitness scores"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Scales the raw fitness scores to convert them into a more usable range of values. These scaled values are called expected values"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Selects members, called parents, based on their expectation"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Some of the individuals in the current population that have lower fitness are chosen as elite. These elite individuals are passed to the next population."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Produces children from the parents. Children are produced either by making random changes to a single parent - mutation - or by combining the vector entries of a pair of parents - crossover"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Replaces the current population with the children to form the next generation"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The algorithm stops when one of the stopping criteria is met."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The algorithm takes modified steps for linear and integer constraints."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The algorithm is further modified for nonlinear constraints."}]}]},{"type":"element","tag":"h3","props":{"id":"creating-the-next-generation"},"children":[{"type":"text","value":"Creating the Next Generation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"At each step, the genetic algorithm uses the current population to create the children that make up the next generation. The algorithm selects a group of individuals in the current population, called parents, who contribute their genes - the entries of their vectors - to their children. The algorithm usually selects individuals that have better fitness values as parents."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The genetic algorithm creates three types of children for the next generation:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Elite children are the individuals in the current generation with the best fitness values. These individuals automatically survive to the next generation."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Crossover children are created by combining the vectors of a pair of parents."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Mutation children are created by introducing random changes, or mutations, to a single parent."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"next generation","src":"multi-agents/next-gen.png"},"children":[]}]},{"type":"element","tag":"h2","props":{"id":"python-implementation"},"children":[{"type":"text","value":"Python Implementation"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"WIP ðŸš§"}]}],"toc":{"title":"","searchDepth":2,"depth":2,"links":[{"id":"creating-the-next-generation","depth":3,"text":"Creating the Next Generation"},{"id":"python-implementation","depth":2,"text":"Python Implementation"}]}},"_type":"markdown","_id":"content:multi-agents:2-genetic-algorithm.md","_source":"content","_file":"multi-agents/2-genetic-algorithm.md","_extension":"md"}